import { IStateTreeNode, IMiddlewareEvent } from "mobx-state-tree";
import { Reactotron } from "reactotron-core-client";
export declare type MstPluginFilter = (event: IMiddlewareEvent) => boolean;
export interface MstPluginOptions {
    /**
     * Fine-grain control over what gets sent to the Reactotron app.
     */
    filter?: MstPluginFilter;
    /**
     * When requesting keys, values, or subscribing, configures whether
     * we talk to the live state object (great for `volatile` state) or the
     * snapshot.  Defaults to `live`.
     */
    queryMode?: "live" | "snapshot";
}
/**
 * A factory function for creating the plugin.
 *
 * @param opts Plugin options.
 */
export declare function mst(opts?: MstPluginOptions): (reactotron: Reactotron) => {
    onCommand: (command: any) => void;
    features: {
        trackMstNode: (node: IStateTreeNode, nodeName?: string) => {
            kind: string;
            message?: undefined;
        } | {
            kind: string;
            message: any;
        };
    };
};
declare module "reactotron-core-client" {
    interface Reactotron {
        trackMstNode?: (node: IStateTreeNode, nodeName?: string) => {
            kind: string;
            message?: string;
        };
    }
}
